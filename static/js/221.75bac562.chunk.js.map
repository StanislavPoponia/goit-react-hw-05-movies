{"version":3,"file":"static/js/221.75bac562.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.section`\n  padding-top: 15px;\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.14);\n`;\nexport const MovieCard = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  padding: 10px 0 10px 10px;\n`;\n\nexport const InfoLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover {\n    color: #ab47bc;\n  }\n`;\n\nexport const InfoItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 270px;\n`;\n\nexport const ExtraInfoSection = styled.div`\n  margin-top: 10px;\n  padding: 10px;\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.14);\n`;\n\nexport const ListItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ExtraInfoTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const MovieInfo = styled.div`\n  width: 500px;\n  text-align: justify;\n`;\n\nexport const BackButton = styled.button`\n  border-radius: 6px;\n  padding: 7px 10px;\n  border: transparent;\n  outline: none;\n  margin-left: 10px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  background-color: #4cd964;\n  color: white;\n  text-decoration: none;\n  &:hover {\n    background-color: #2e7d32;\n  }\n`;","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { TiChevronLeft } from 'react-icons/ti';\nimport { getMovieById } from 'services/api';\nimport blankImage from '../../images/white_image.png';\nimport React from 'react';\nimport {\n  MovieCard,\n  InfoItem,\n  InfoLink,\n  Title,\n  Wrapper,\n  ImageWrapper,\n  ExtraInfoSection,\n  ListItem,\n  ExtraInfoTitle,\n  MovieInfo,\n  BackButton,\n} from './MovieDetails.styled';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const movieData = await getMovieById(movieId);\n        setMovie(movieData);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const handleGoBackButton = () => {\n    navigate(location.state.from);\n  };\n  if (!movie) {\n    return;\n  }\n  const { genres, title, release_date, overview, vote_average, poster_path } =\n    movie;\n  const imageSRC = poster_path ? IMAGEURL + poster_path : blankImage;\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n  const movieGenres = genres.map(genre => genre.name).join(' ');\n  const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <>\n      <Wrapper>\n        {location.state?.from && (\n          <BackButton onClick={handleGoBackButton}>\n            <TiChevronLeft />\n            <span>Go back</span>\n          </BackButton>\n        )}\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <MovieCard>\n            <ImageWrapper>\n              <img src={`${imageSRC}`} alt={title} />\n            </ImageWrapper>\n            <MovieInfo>\n              <Title>\n                {title} {releaseDate && `(${releaseDate})`}\n              </Title>\n              <ul>\n                <InfoItem>\n                  {userScore > 0 && <p>User Score: {userScore}%</p>}\n                </InfoItem>\n                <InfoItem>\n                  <b>Overview</b>\n\n                  <p>{overview}</p>\n                </InfoItem>\n                <InfoItem>\n                  <b>Genres</b>\n\n                  <p>{movieGenres || ' - '}</p>\n                </InfoItem>\n              </ul>\n            </MovieInfo>\n          </MovieCard>\n        )}\n      </Wrapper>\n      <ExtraInfoSection>\n        <ExtraInfoTitle> Additional information</ExtraInfoTitle>\n        <div>\n          <ul>\n            <ListItem>\n              <InfoLink to=\"cast\" state={location.state}>\n                Cast\n              </InfoLink>\n            </ListItem>\n\n            <ListItem>\n              <InfoLink to=\"reviews\" state={location.state}>\n                Reviews\n              </InfoLink>\n            </ListItem>\n          </ul>\n        </div>\n      </ExtraInfoSection>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'ade1daffc6bca963e80c58578c4f4361';\n\n//trending movies request\nexport const getTrendingMovies = async () => {\n    const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n    return data.results;\n  };\n\n  export const getMovieById = async movieId => {\n    const res = await axios\n      .get(`/movie/${movieId}?api_key=${KEY}`)\n      .catch(error => {\n        throw new Error('Sorry, we have a problem.');\n      });\n    return res.data;\n  };\n\n  export const getCredits = async movieId => {\n    const { data } = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n\n  export const getReviews = async movieId => {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n    return data.results;\n  };\n\n  export const getMoviesByName = async query => {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return data;\n  };"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","MovieCard","_templateObject2","InfoLink","Link","_templateObject3","InfoItem","_templateObject4","Title","_templateObject5","ImageWrapper","_templateObject6","ExtraInfoSection","_templateObject7","ListItem","_templateObject8","ExtraInfoTitle","_templateObject9","MovieInfo","_templateObject10","BackButton","_templateObject11","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","navigate","useNavigate","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieData","wrap","_context","prev","next","getMovieById","sent","t0","console","log","finish","stop","apply","arguments","genres","title","release_date","overview","vote_average","poster_path","imageSRC","userScore","Math","round","Number","movieGenres","map","genre","name","join","releaseDate","slice","_jsxs","_Fragment","children","state","from","onClick","_jsx","TiChevronLeft","src","concat","alt","to","Suspense","Outlet","axios","KEY","getTrendingMovies","_yield$axios$get","data","abrupt","results","_ref2","_callee2","res","_context2","catch","error","Error","_x","getCredits","_ref3","_callee3","_yield$axios$get2","_context3","cast","_x2","getReviews","_ref4","_callee4","_yield$axios$get3","_context4","_x3","getMoviesByName","_ref5","_callee5","query","_yield$axios$get4","_context5","_x4"],"sourceRoot":""}