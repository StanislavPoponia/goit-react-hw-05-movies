{"version":3,"file":"static/js/426.436defa3.chunk.js","mappings":"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","sources":["Pages/Movies/Movies.styled.jsx","Pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 15px 0;\n`;\n\nexport const ListItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  :hover {\n    color: #2e7d32;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n`;","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport Notiflix from 'notiflix';\nimport { getMoviesByName } from 'services/api';\nimport { List, ListItem, MovieLink, Form } from './Movies.styled';\nimport React from 'react';\n\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const fullPath = location.pathname + location.search;\n  const movieName = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.movie.value;\n    if (!query) {\n      Notiflix.Notify.info('Enter please a movie name.', );\n    }\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  useEffect(() => {\n    const fetchdata = async () => {\n      if (!movieName) {\n        return;\n      }\n      setIsLoading(true);\n      try {\n        const movies = await getMoviesByName(movieName);\n        setMovies(movies.results);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchdata();\n  }, [movieName]);\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"movie\"\n          placeholder=\"Enter the movie\"\n          autoComplete=\"on\"\n          color=\"success\"\n          defaultValue={movieName}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"success\"\n          size=\"small\"\n         \n        >\n          Search\n        </Button>\n      </Form>\n     \n      <>\n        {isLoading && <p>Loading...</p>}\n        {movieName && (\n          <List>\n            {movies.map(({ id, title, name }) => (\n              <ListItem key={id}>\n                <MovieLink to={`${id}`} state={{ from: fullPath }}>\n                  {title || name}\n                </MovieLink>\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'ade1daffc6bca963e80c58578c4f4361';\n\n//trending movies request\nexport const getTrendingMovies = async () => {\n    const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n    return data.results;\n  };\n\n  export const getMovieById = async movieId => {\n    const res = await axios\n      .get(`/movie/${movieId}?api_key=${KEY}`)\n      .catch(error => {\n        throw new Error('Sorry, we have a problem.');\n      });\n    return res.data;\n  };\n\n  export const getCredits = async movieId => {\n    const { data } = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n\n  export const getReviews = async movieId => {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n    return data.results;\n  };\n\n  export const getMoviesByName = async query => {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return data;\n  };"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","MovieLink","Link","_templateObject3","Form","_templateObject4","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","fullPath","pathname","search","movieName","get","useEffect","fetchdata","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_movies","wrap","_context","prev","next","abrupt","getMoviesByName","sent","results","t0","console","log","finish","stop","apply","arguments","_jsxs","children","onSubmit","e","preventDefault","query","target","movie","value","Notiflix","_jsx","Input","type","name","placeholder","autoComplete","color","defaultValue","Button","variant","size","_Fragment","map","_ref2","id","title","to","concat","state","from","axios","KEY","getTrendingMovies","_yield$axios$get","data","getMovieById","_callee2","movieId","res","_context2","catch","error","Error","_x","getCredits","_ref3","_callee3","_yield$axios$get2","_context3","cast","_x2","getReviews","_ref4","_callee4","_yield$axios$get3","_context4","_x3","_ref5","_callee5","_yield$axios$get4","_context5","_x4"],"sourceRoot":""}